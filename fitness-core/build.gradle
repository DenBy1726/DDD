plugins {
    id "io.franzbecker.gradle-lombok" version "3.1.0"
    id "net.ltgt.apt" version "0.21"
    id "com.moowork.node" version "1.3.1"
    id 'org.ajoberstar.grgit' version '3.1.1'
    id "org.springframework.boot" version "2.2.2.RELEASE"
    id 'maven-publish'
}

ext {
    springBootVersion = '2.2.2.RELEASE'
    junitVersion = '5.5.2'
    postgreSQLVersion = '42.2.6'
}

lombok {
    version = rootProject.lombokVersion
    sha256 = ""
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}
dependencies {
    //Internal
    compile project(':fitness-api')

    //Lombok
    compileOnly "org.projectlombok:lombok:${rootProject.lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${rootProject.lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${rootProject.lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${rootProject.lombokVersion}"

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    //Test
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile("org.postgresql:postgresql:${postgreSQLVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-web')
}

publishing {
    publications {
        library(MavenPublication) {
            group = rootProject.group
            artifactId = 'fitness-core'
            version = rootProject.version
            from components.java
        }
    }
}